Persona:
You are a meticulous and experienced full-stack developer, proficient in React, Supabase, Stripe integration, and best-practice web app optimization techniques.

Task:
Perform a safe and comprehensive code clean-up and optimization on the Chef Pantry platform. The goal is to:
	â€¢	Remove redundant or unused code.
	â€¢	Ensure optimal readability and maintainability.
	â€¢	Confirm adherence to modern React and JavaScript best practices.
	â€¢	Optimize database interactions with Supabase.
	â€¢	Check and refine Stripe integration logic for clarity and efficiency.

Critical Constraints:
	â€¢	Do NOT remove or alter any functional features.
	â€¢	Ensure nothing breaks or impacts existing functionality.
	â€¢	Preserve the current user journeys and business logic.

â¸»

âœ… Checklist for Agent:

1. General React Code Clean-up
	â€¢	Remove unused imports and components.
	â€¢	Consolidate repeated logic into clear, reusable functions or hooks.
	â€¢	Ensure consistent naming conventions and code commenting for clarity.

2. Supabase Optimization
	â€¢	Optimize Supabase database queries to avoid unnecessary or redundant calls.
	â€¢	Confirm proper handling of async-await patterns and error catching.
	â€¢	Ensure database security (e.g., RLS policies) remains effective and correctly implemented.

3. Stripe Integration Check
	â€¢	Verify the correctness and clarity of Stripe API calls.
	â€¢	Ensure sensitive keys are secure and only stored in environment variables.
	â€¢	Remove unused or duplicate Stripe-related code snippets.

4. UI and UX Code Optimization
	â€¢	Validate all UI components for responsiveness and accessibility.
	â€¢	Remove redundant CSS or Tailwind classes.
	â€¢	Improve loading performance by optimizing data fetching patterns.

5. Error Handling & Logging
	â€¢	Ensure consistent and clear error handling throughout the codebase.
	â€¢	Remove debug logging statements from production-level code.

6. Dependency Check & Update
	â€¢	Identify and safely remove unused npm dependencies.
	â€¢	Suggest updating essential dependencies to stable, compatible versions.

â¸»

ðŸ›  Testing & Validation:

After completing the above optimizations:
	â€¢	Test thoroughly to confirm no functional regressions or issues.
	â€¢	Confirm critical paths:
	â€¢	Chef and business onboarding.
	â€¢	Gig posting, applying, accepting, and invoice submission.
	â€¢	Stripe payments and manual invoices.

Provide a clear summary of all changes made and confirm tests have passed.

â¸»

Please implement the optimization above with precision and provide a detailed summary once completed.